{"version":3,"sources":["webpack://Storage/webpack/bootstrap","webpack://Storage/./src/storage.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kCAAkC;AAClD;AACA;AACA,gCAAgC,kCAAkC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;;AAEZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACdfile":"storage.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/storage.js\");\n","/**\n * Class to save data to localStorage.\n *\n *\n * Usage (without observable flag):\n * --------------------------------\n *\n * // Create the \"test\" storage (localStore.storage.test)\n * let ts = new Storage('test')\n *\n * // Get the entire \"test\" storage\n * let observable = false\n * testStorage = ts.getStorage(observable)\n *\n * // Save the entire storage to localStorage (localStorage.storage.test)\n * let data = [{'id': 123, 'name': 'Björn Hempel'}]\n * testStorage.data = data\n * ts.setStorage(testStorage)\n *\n * // Save a part of the storage to localStorage (localStorage.storage.test.data2)\n * let data2 = [{'id': 123, 'name': 'Björn Hempel'}]\n * ts.set('data2', data2)\n * console.log(testStorage.data2) // testStorage.data2 = data2 is not needed\n *\n * // Get a part of the storage (localStorage.storage.test.data)\n * let data = ts.get('data')\n *\n * // output the entire \"test\" storage (localStorage.storage.test.data && localStorage.storage.test.data2)\n * console.log(testStorage)\n *\n *\n * Usage (with observable flag - Proxy):\n * -------------------------------------\n *\n * // Create the \"test\" storage (localStore.storage.test)\n * let ts = new Storage('test')\n *\n * // Get the entire \"test\" storage as observable object\n * let observable = true\n * testStorage = ts.getStorage(observable)\n *\n * // Now all changes on testStorage are automatically saved into the localStorage\n * let data = [{'id': 123, 'name': 'Björn Hempel'}]\n * testStorage['data'] = data // auto-save to localstorage\n * // saved in localStorage: ls.storage.test.data[].id = 123, ls.storage.test.data[].name = 'Björn Hempel'\n * // same as: ts.set('data', [{'id': 123, 'name': 'Björn Hempel'}]) -> wenn observable = false\n *\n * // output the entire \"test\" storage (localStorage.storage.test.data)\n * console.log(testStorage)\n *\n *\n * @author  Björn Hempel <bjoern@hempel.li>\n * @version 1.0 (2019-03-15)\n */\n\"use strict\"\n\nconst LS_STORAGE_KEY = 'storage'\n\nclass Storage {\n\tconstructor (area) {\n\t\tthis.ls = window.localStorage\n\t\tthis.area = area\n\n\t\tthis.initLocalStorage()\n\t}\n\n\t/**\n\t * Initializes the entire \"LocalStorage\" storage.\n\t *\n\t * @param defaultValue\n\t */\n\tinitLocalStorage (defaultValue = {}) {\n\t\tif (this.ls.getItem(LS_STORAGE_KEY) === null) {\n\t\t\tthis.ls.setItem(LS_STORAGE_KEY, JSON.stringify(defaultValue))\n\t\t}\n\t}\n\n\t/**\n\t * Returns the entire content of the storage (in parsed state).\n\t *\n\t * @returns {any}\n\t */\n\tgetLocalStorage () {\n\t\tthis.initLocalStorage()\n\n\t\treturn JSON.parse(this.ls.getItem(LS_STORAGE_KEY))\n\t}\n\n\t/**\n\t * Sets the entire storage within the LocalStorage.\n\t *\n\t * @param value\n\t */\n\tsetLocalStorage (value) {\n\t\tthis.initLocalStorage()\n\n\t\tthis.ls.setItem(LS_STORAGE_KEY, JSON.stringify(value))\n\t}\n\n\t/**\n\t * Initialize an area of the storage.\n\t *\n\t * @param defaultValue\n\t * @returns {*}\n\t */\n\tinitStorage (defaultValue = {}) {\n\t\tlet localStorage = this.getLocalStorage()\n\n\t\tif (!localStorage.hasOwnProperty(this.area)) {\n\t\t\tthis.setStorage(defaultValue)\n\t\t}\n\n\t\tif (typeof this.storage === 'undefined') {\n\t\t\tthis.storage = localStorage[this.area]\n\t\t}\n\t}\n\n\t/**\n\t * Returns an area of the storage.\n\t *\n\t * @returns {*}\n\t */\n\tgetStorage (observable = false) {\n\t\tthis.initStorage()\n\n\t\tif (observable) {\n\t\t\treturn this.observe(\n\t\t\t\tthis.storage,\n\t\t\t\t(property, value) => {\n\t\t\t\t\tlet data = this.storage\n\n\t\t\t\t\tlet properties = property.split('.')\n\t\t\t\t\tlet lastProperty = properties.pop()\n\n\t\t\t\t\t/* Iterate through given properties. */\n\t\t\t\t\tproperties.forEach(function (key) {\n\t\t\t\t\t\tdata = data[key]\n\t\t\t\t\t})\n\n\t\t\t\t\tdata[lastProperty] = value\n\n\t\t\t\t\tthis.setStorage(this.storage)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\treturn this.storage\n\t}\n\n\t/**\n\t * Sets an area of the storage with value.\n\t *\n\t * @param storage\n\t */\n\tsetStorage (storage) {\n\t\tlet localStorage = this.getLocalStorage()\n\n\t\tlocalStorage[this.area] = storage\n\n\t\tthis.storage = storage\n\n\t\tthis.setLocalStorage(localStorage)\n\t}\n\n\t/**\n\t * Gets a key from the storage (this.area).\n\t *\n\t * @param key\n\t * @returns {*}\n\t */\n\tget (key, defaultValue = null, observable = false) {\n\t\tlet storageArea = this.getStorage(observable)\n\n\t\tif (!storageArea.hasOwnProperty(key)) {\n\t\t\treturn defaultValue\n\t\t}\n\n\t\treturn storageArea[key]\n\t}\n\n\t/**\n\t * Sets a key within the storage (this.area).\n\t *\n\t * @param key\n\t * @param value\n\t */\n\tset (key, value) {\n\t\tlet storageArea = this.getStorage()\n\n\t\tstorageArea[key] = value\n\n\t\tthis.setStorage(storageArea)\n\t}\n\n\t/**\n\t * Initialize a queue.\n\t *\n\t * @param key\n\t */\n\tinitQueue (key = 'queue') {\n\t\tlet values = this.get(key, [])\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tconsole.error('initQueue: The given values must be an array!')\n\t\t\treturn\n\t\t}\n\n\t\tthis.set(key, values)\n\t}\n\n\t/**\n\t * Returns all entries of the queue.\n\t *\n\t * @param key\n\t */\n\tgetQueue (key = 'queue') {\n\t\tthis.initQueue(key)\n\n\t\tlet values = this.get(key, [])\n\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn []\n\t\t}\n\n\t\treturn values\n\t}\n\n\t/**\n\t * Adds the given element to the queue.\n\t *\n\t * @param value\n\t * @param key\n\t */\n\tpushQueue (value, key = 'queue') {\n\t\tthis.initQueue(key)\n\n\t\tlet values = this.get(key, [])\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tconsole.error('pushQueue: The given values must be an array!')\n\t\t\treturn\n\t\t}\n\n\t\tvalues.push(value)\n\n\t\tthis.set(key, values)\n\t}\n\n\t/**\n\t * Gets the number of queue entries.\n\t *\n\t * @param value\n\t * @param key\n\t */\n\tgetNumberOfQueuesItems (key = 'queue') {\n\t\treturn this.getQueue(key).length\n\t}\n\n\t/**\n\t * Gets the next queue entry (FIFO).\n\t *\n\t * @param value\n\t * @param key\n\t */\n\tgetNextQueueItem (key = 'queue') {\n\t\tthis.initQueue(key)\n\n\t\tlet values = this.get(key, [])\n\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn null\n\t\t}\n\n\t\tif (this.getNumberOfQueuesItems(key) <= 0) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn values[0]\n\t}\n\n\t/**\n\t * Deletes the next queue entry and returns it (FIFO).\n\t *\n\t * @param value\n\t * @param key\n\t */\n\tdeleteNextQueueItem (key = 'queue') {\n\t\tthis.initQueue(key)\n\n\t\tlet values = this.get(key, [])\n\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn null\n\t\t}\n\n\t\tif (this.getNumberOfQueuesItems(key) <= 0) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn values.shift()\n\t}\n\n\t/**\n\t * Adds magic getters and setter methods to the given object to be able to react to changes with a\n\t * callback function.\n\t *\n\t * @param obj\n\t * @param callback\n\t */\n\tobserve (obj, callback) {\n\t\tfunction buildProxy (prefix, obj) {\n\t\t\tlet changeHandler = {\n\t\t\t\tget: (target, property) => {\n\t\t\t\t\tconst out = target[property]\n\n\t\t\t\t\tif (out instanceof Object) {\n\t\t\t\t\t\treturn buildProxy(prefix + property + '.', out)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn out\n\t\t\t\t},\n\t\t\t\tset: (target, property, value) => {\n\t\t\t\t\tcallback(prefix + property, value)\n\n\t\t\t\t\ttarget[property] = value\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Proxy(obj, changeHandler)\n\t\t}\n\n\t\treturn buildProxy('', obj)\n\t}\n}\n\nmodule.exports = Storage\n\n"],"sourceRoot":""}